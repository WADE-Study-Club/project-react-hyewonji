[{"/Users/jihyewon/Documents/weather_app/client/src/index.js":"1","/Users/jihyewon/Documents/weather_app/client/src/App.js":"2","/Users/jihyewon/Documents/weather_app/client/src/WeatherContext.js":"3","/Users/jihyewon/Documents/weather_app/client/src/components/Globalstyles.js":"4","/Users/jihyewon/Documents/weather_app/client/src/components/Router.js":"5","/Users/jihyewon/Documents/weather_app/client/src/routes/Add.js":"6","/Users/jihyewon/Documents/weather_app/client/src/routes/Login.js":"7","/Users/jihyewon/Documents/weather_app/client/src/routes/Signup.js":"8","/Users/jihyewon/Documents/weather_app/client/src/routes/Home.js":"9","/Users/jihyewon/Documents/weather_app/client/src/components/NavBar.js":"10","/Users/jihyewon/Documents/weather_app/client/src/components/AddTemplate.js":"11","/Users/jihyewon/Documents/weather_app/client/src/components/FormTemplate.js":"12","/Users/jihyewon/Documents/weather_app/client/src/api.js":"13","/Users/jihyewon/Documents/weather_app/client/src/components/WeatherApi.js":"14","/Users/jihyewon/Documents/weather_app/client/src/components/HomeTemplate.js":"15","/Users/jihyewon/Documents/weather_app/client/src/components/HelmetComponent.js":"16","/Users/jihyewon/Documents/weather_app/client/src/components/WeatherCard.js":"17","/Users/jihyewon/Documents/weather_app/client/src/components/MainWeather.js":"18","/Users/jihyewon/Documents/weather_app/client/src/components/LandingPage.js":"19"},{"size":268,"mtime":1616830110137,"results":"20","hashOfConfig":"21"},{"size":371,"mtime":1616830110130,"results":"22","hashOfConfig":"21"},{"size":1673,"mtime":1616830110130,"results":"23","hashOfConfig":"21"},{"size":935,"mtime":1616830110132,"results":"24","hashOfConfig":"21"},{"size":726,"mtime":1616830110135,"results":"25","hashOfConfig":"21"},{"size":3874,"mtime":1616830110138,"results":"26","hashOfConfig":"21"},{"size":2713,"mtime":1616830287026,"results":"27","hashOfConfig":"21"},{"size":1631,"mtime":1616830425160,"results":"28","hashOfConfig":"21"},{"size":1691,"mtime":1616830110138,"results":"29","hashOfConfig":"21"},{"size":4007,"mtime":1616830110135,"results":"30","hashOfConfig":"21"},{"size":4979,"mtime":1616830110131,"results":"31","hashOfConfig":"21"},{"size":4230,"mtime":1616830392448,"results":"32","hashOfConfig":"21"},{"size":654,"mtime":1616830110131,"results":"33","hashOfConfig":"21"},{"size":579,"mtime":1616830110136,"results":"34","hashOfConfig":"21"},{"size":929,"mtime":1616830110133,"results":"35","hashOfConfig":"21"},{"size":343,"mtime":1616830110133,"results":"36","hashOfConfig":"21"},{"size":2507,"mtime":1616830110136,"results":"37","hashOfConfig":"21"},{"size":6054,"mtime":1616830110134,"results":"38","hashOfConfig":"21"},{"size":317,"mtime":1616830110134,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"10sdavs",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/jihyewon/Documents/weather_app/client/src/index.js",[],["84","85"],"/Users/jihyewon/Documents/weather_app/client/src/App.js",[],"/Users/jihyewon/Documents/weather_app/client/src/WeatherContext.js",["86"],"import React, { createContext, useContext, useReducer, useRef } from 'react';\n\nconst initialList = [\n    {\n        id: 1,\n        city: 'Rome'\n    },\n    {\n        id: 2,\n        city: 'Seoul'\n    }\n]\n\nfunction weatherReducer(state, action){\n    switch(action.type){\n        case 'CREATE':\n            return state.concat(action.search);\n        default:\n            throw new Error('Unhandled action type: ${action.type}');\n    }\n}\n\nconst WeatherStateContext = createContext();\nconst WeatherDispatchContext = createContext();\nconst WeatherNextIdContext = createContext();\n\nexport function WeatherProvider({ children }){\n    const [state, dispatch] = useReducer(weatherReducer, initialList)\n    const nextId = useRef(3);\n\n    return(\n        <WeatherStateContext.Provider value={state}>\n            <WeatherDispatchContext.Provider value={dispatch}>\n                <WeatherNextIdContext.Provider value={nextId}>\n                    {children}\n                </WeatherNextIdContext.Provider>\n            </WeatherDispatchContext.Provider>\n        </WeatherStateContext.Provider>\n    );\n}\n\nexport function useWeatherState(){\n    const context = useContext(WeatherStateContext);\n    if (!context) {\n        throw new Error('Cannot find WeatherProvider');\n    }\n    return context;\n}\n\nexport function useWeatherDispatch(){\n    const context = useContext(WeatherDispatchContext);\n    if(!context){\n        throw new Error('Cannot find WeatherProvider');\n    }\n    return context;\n}\n\nexport function useWeatherNextId(){\n    const context = useContext(WeatherNextIdContext);\n    if (!context) {\n        throw new Error('Cannot find WeatherProvider');\n    }\n    return context;\n}","/Users/jihyewon/Documents/weather_app/client/src/components/Globalstyles.js",[],"/Users/jihyewon/Documents/weather_app/client/src/components/Router.js",["87","88"],"import React from \"react\";\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Login from '../routes/Login';\nimport Signup from '../routes/Signup';\nimport Home from '../routes/Home';\nimport Add from '../routes/Add';\nimport LandingPage from \"./LandingPage\";\n\nexport default () => (\n    <Router>\n      <Switch>\n        <Route path = '/' exact={true} component={Login}></Route>\n        <Route path = '/home' component={Home}></Route>\n        <Route path = '/signup' component={Signup}></Route>\n        <Route path = '/add' component={Add}></Route>\n        <Route path = '/hello' component={LandingPage}></Route>\n        {/*<Redirect from = \"*\" to = \"/\" />*/}\n      </Switch>\n    </Router>\n);\n","/Users/jihyewon/Documents/weather_app/client/src/routes/Add.js",["89","90","91"],"import React, { useState, useEffect } from \"react\";\nimport { CallApi } from \"../api\";\nimport { CountryApi } from \"../api\";\nimport weatherApi from '../components/WeatherApi';\nimport NavBar from \"../components/NavBar\";\nimport AddTemplate from \"../components/AddTemplate\";\nimport { useWeatherDispatch, useWeatherNextId } from '../WeatherContext';\n\nconst Add = () => {\n  const [coords, setCoords] = useState({\n    latitude: null,\n    longitude: null,\n  });\n  const [nowCity, setNowCity] = useState({\n    city: null,\n    weather: null,\n    temp: 0,\n  });\n  const [searchCity, setSearchCity] = useState({\n    city: null,\n    weather: null,\n    temp: 0,\n    temp_min: 0,\n    temp_max: 0\n  })\n  const [cityList,setCityList] = useState([]);\n  const [inputValue,setInputValue] = useState(null);\n  //const [inputList,setInputList] = useState([]);\n  const [showWeatherCard, setShowWeatherCard] = useState(false);\n  const [addMode, setAddMode] = useState(false);\n  const COORDS = 'coords';\n  const CITY = 'city';\n  \n  const dispatch = useWeatherDispatch();\n  const nextId = useWeatherNextId();\n  \n  const getWeather = async (request) => {\n    if(request === COORDS){\n      if(coords.latitude !== null && coords.longitude !== null){\n        const weatherDataByCoords = await CallApi(COORDS,coords);\n        const { data : { \n          weather, \n          name : city,\n          main : {\n            temp} \n          }} = weatherDataByCoords;\n        \n        setNowCity({\n          ...nowCity,\n          city,\n          weather: weather[0].main,\n          temp: Math.round(temp-273)\n        })\n      }\n    } else if (request === CITY){\n      weatherApi(inputValue)\n      .then(weatherInfo=> setSearchCity(weatherInfo))\n    } \n  };\n  \n  const getCityList = () => {\n    const data = CountryApi();\n    data.then(res => {\n      const { data } = res\n      data.forEach(country => {\n        if(country.capital.length){\n          cityList.push(country.capital);\n        }\n      });\n    })\n    cityList.sort();\n    console.log(cityList);\n  } \n  \n  /*\n  const getInputList = () => {\n    if(inputValue){\n      setInputList([]);\n      cityList.forEach(city => {\n        const cityS = city.replace(\" \",\"\").toLowerCase();\n        if(cityS.includes(inputValue) && inputList.length < 5){\n          inputList.push(city);\n        }\n      })\n    }\n    console.log(inputList);\n  }\n  */\n\n  const handleChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const capitalize = inputValue.charAt(0).toUpperCase() + inputValue.slice(1);\n    if(cityList.indexOf(capitalize) >= 0){\n      getWeather(CITY);\n    } else {\n      setShowWeatherCard(false);\n    }\n  };\n\n  const handleClick = () => {\n    dispatch({\n      type: 'CREATE',\n      search: {\n        id: nextId.current,\n        city: searchCity.city\n      }\n    })\n    setShowWeatherCard(false);\n    setAddMode(true);\n    setTimeout(setAddMode(false),2000);\n    nextId.current += 1;\n  }\n\n  useEffect(() => {\n    getCityList();\n    navigator.geolocation.getCurrentPosition((position) => {\n      const { latitude, longitude } = position.coords;\n      setCoords({\n        ...coords,\n        latitude,\n        longitude\n      })\n    });\n  }, []);\n\n  useEffect(() => {\n    getWeather(COORDS);\n  },[COORDS,coords]);\n\n  /*  \n  useEffect(()=> {\n    getInputList();\n  },[inputValue, inputList]);\n  */\n\n  useEffect(()=>{\n    if(searchCity.city !== null){\n      setShowWeatherCard(true);\n    } else {\n      setShowWeatherCard(false);\n    }\n  },[searchCity]);\n\n  return (\n    <>\n      <NavBar />\n      <AddTemplate\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n        onClick={handleClick}\n        nowCity={nowCity}\n        searchCity={searchCity}\n        showWeatherCard={showWeatherCard}\n        addMode={addMode}\n      ></AddTemplate>\n    </>\n  );\n};\n\nexport default React.memo(Add);\n","/Users/jihyewon/Documents/weather_app/client/src/routes/Login.js",["92","93"],"/Users/jihyewon/Documents/weather_app/client/src/routes/Signup.js",[],"/Users/jihyewon/Documents/weather_app/client/src/routes/Home.js",["94","95"],"import React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport HelmetComponent from \"../components/HelmetComponent\";\nimport HomeTemaplate from \"../components/HomeTemplate\";\nimport NavBar from \"../components/NavBar\";\nimport WeatherCard from '../components/WeatherCard';\nimport weatherApi from '../components/WeatherApi';\nimport { useWeatherState } from '../WeatherContext';\n\nconst WeatherListBlock = styled.div`\n  width: 100vw;\n  margin: 100px 30px; \n  display: grid;\n  grid-template-columns: repeat(3, 370px);\n  align-items: center;\n  justify-content: space-around;\n  @media screen and (max-width: 1300px) {\n    grid-template-columns: repeat(2, 370px);\n  }\n  @media screen and (max-width: 860px) {\n    grid-template-columns: repeat(1, 370px);\n  }\n`\n\nfunction Home(){\n  const weathers = useWeatherState(); // weatherContex.js에서 id, cityName 저장돼있는 state불러옴\n  const [weather,setWeather] = useState([]) // cityName으로 weather API로부터 불러온 정보 저장(cityName, weather, temperature, temperatureMin, temperatureMax )\n  const test = []\n  \n\n  useEffect(()=>{\n    weathers.map(item => (\n      weatherApi(item.city)\n      .then(res => {\n        setWeather(weather => [...weather, res]);\n        console.log(weather);\n      })\n    ))\n  },[])\n\n  return (\n    <>\n      <HelmetComponent title=\"Home\" />\n      <NavBar></NavBar>\n      <WeatherListBlock>\n        {weather.map(item => (  // weather에 저장된 정보로 WeatherCard 호출(?)\n            <WeatherCard\n              searchCity = {item}\n            />\n          ))}\n        <HomeTemaplate></HomeTemaplate>\n      </WeatherListBlock> \n    </>\n  );\n};\n\nexport default Home;\n","/Users/jihyewon/Documents/weather_app/client/src/components/NavBar.js",[],"/Users/jihyewon/Documents/weather_app/client/src/components/AddTemplate.js",["96"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport WeatherCard from './WeatherCard';\nimport MainWeather from './MainWeather';\n\nconst Main = styled.div`\n  margin-top: 100px;\n  margin-bottom: 50px;\n  width: 90vw;\n  height: 82vh;\n  display: flex;\n  @media screen and (max-width: 768px) {\n    height: auto;\n    flex-direction: column;\n  }\n`;\n\nconst CitySearchWrapper = styled.div`\n  width: 50%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  padding-top: 70px;\n  border-radius: 20px 0 0 20px;\n  background: white;\n  overflow: scroll;\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    height: 100%;\n    border-radius: 20px 20px 0 0;\n  }\n`;\n\nconst SearchTitle = styled.div`\n  font-size: 30px;\n  font-weight: 600px;\n  margin-bottom: 40px;\n  color: #005659;\n`\n\nconst SearchCityForm = styled.form`\n  position: relative;\n  width: 80%;\n  box-sizing: border-box;\n  margin-bottom: 20px;\n`;\n\nconst Input = styled.input`\n  width: 83%;\n  padding: 23px;\n  border-radius: 50px;\n  outline: none;\n  border: none;\n  box-shadow: 0 0 2rem 0.15rem rgba(0, 0, 255, 0.1);\n  font-size: 15px;\n  color: #131f69;\n  text-transform: uppercase;\n`;\n\nconst SubmitBtn = styled.div`\n  cursor: pointer;\n  position: absolute;\n  right: 0;\n  top: -0.35rem;\n  height: 75px;\n  width: 75px;\n  border-radius: 50%;\n  outline: none;\n  border: none;\n  z-index: 5;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0 0 2rem 0.15rem rgba(0, 0, 255, 0.1);\n  color: white;\n  background-color: #31feae;\n  font-size: 50px;\n`;\n\nconst WeatherCardContainer = styled.div`\n  display: flex;\n  align-items: center;\n  display: ${props => props.showWeatherCard ? 'block' : 'none'};\n`\n\nconst FollowBtn = styled.div`\n    padding: 17px 20px;\n    margin: 0;\n    border-radius: 30px;\n    background: #2B244D;\n    color: white;\n    position: relative;\n    bottom: 70px;\n    display: ${props => props.showWeatherCard ? 'block' : 'none'};\n    &:hover{\n      background: #32FEAE;\n    }\n`\n\nconst AddedCard = styled.div`\n  display: ${props => props.addMode ? 'display': 'none'};\n`\n\n\nconst CurrentWeatherWrapper = styled.div`\n  width: 50%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  padding-top: 70px;\n  border-radius: 0 20px 20px 0;\n  color: white;\n  position: relative;\n  background-image: url(\"https://source.unsplash.com/random/1200x900?ocean\");\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    height: 100vh;\n    border-radius: 0 0 20px 20px;\n  }\n`;\n\n\nconst Title = styled.div`\n  font-size: 28px;\n  font-weight: 600;\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n  border-bottom: solid 1px white;\n`;\n\nconst Date = styled.div`\n  font-size: 15px;\n  margin-bottom: 20px;\n`;\n\nconst Image = styled.div`\n  width: 100px;\n  height: 100px;\n  padding: 10px;\n  margin: 60px;\n  background-size: contain;\n  @media screen and (max-width: 768px) {\n    margin: 30px;\n  }\n`;\n\nconst Temperature = styled.div`\n  font-size: 70px;\n  margin-bottom: 20px;\n`;\n\nconst City = styled.div`\n  font-size: 28px;\n  margin-bottom: 20px;\n`;\n\nconst Description = styled.div`\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\n\nfunction AddCurrent({ onSubmit, onChange, onClick, nowCity, searchCity, showWeatherCard, addMode }) {\n  const today = new window.Date();\n  const dateString = today.toLocaleDateString(\"en-US\", {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"short\"\n  });\n  const dayforamt = dateString.day%10;\n  const { city, weather, temp : temp } = nowCity;\n  return (\n    <Main>\n      <CitySearchWrapper>\n        <SearchTitle>\n          SEARCH CITIES\n        </SearchTitle>\n        <SearchCityForm onSubmit={onSubmit}>\n          <Input \n            name='keyword'\n            placeholder=\"SEARCH CITY\"\n            onChange={onChange}\n          ></Input>\n          <SubmitBtn onClick={onSubmit}>\n            <AiOutlineSearch ></AiOutlineSearch>\n          </SubmitBtn>\n        </SearchCityForm>\n        <WeatherCardContainer showWeatherCard={showWeatherCard}>\n          <WeatherCard searchCity={searchCity}/>\n        </WeatherCardContainer>\n        <FollowBtn showWeatherCard={showWeatherCard} onClick={onClick}>ADD CITY +</FollowBtn>\n        <AddedCard addMode={addMode}>City has been successfully added!</AddedCard> \n      </CitySearchWrapper>\n\n      <CurrentWeatherWrapper>\n        <Title>CITY OF THE MONTH</Title>\n        <Date>{dateString}\n          {dayforamt === 1 \n            ? 'st' \n            : (dayforamt === 2 \n                ? 'nd' \n                : (dayforamt === 3 \n                    ? 'rd' \n                    : 'th'))}</Date>\n        <Image>{MainWeather(weather)}</Image>\n        <Temperature>{temp}°</Temperature>\n        <City>{city}</City>\n        <Description>{weather}</Description>\n      </CurrentWeatherWrapper>\n    </Main>\n  );\n}\n\nexport default React.memo(AddCurrent);\n","/Users/jihyewon/Documents/weather_app/client/src/components/FormTemplate.js",["97","98","99"],"/Users/jihyewon/Documents/weather_app/client/src/api.js",[],"/Users/jihyewon/Documents/weather_app/client/src/components/WeatherApi.js",[],"/Users/jihyewon/Documents/weather_app/client/src/components/HomeTemplate.js",[],"/Users/jihyewon/Documents/weather_app/client/src/components/HelmetComponent.js",[],"/Users/jihyewon/Documents/weather_app/client/src/components/WeatherCard.js",[],"/Users/jihyewon/Documents/weather_app/client/src/components/MainWeather.js",[],"/Users/jihyewon/Documents/weather_app/client/src/components/LandingPage.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":19,"column":29,"nodeType":"106","messageId":"107","endLine":19,"endColumn":68},{"ruleId":"108","severity":1,"message":"109","line":2,"column":39,"nodeType":"110","messageId":"111","endLine":2,"endColumn":47},{"ruleId":"112","severity":1,"message":"113","line":9,"column":1,"nodeType":"114","endLine":20,"endColumn":3},{"ruleId":"108","severity":1,"message":"115","line":26,"column":19,"nodeType":"110","messageId":"111","endLine":26,"endColumn":30},{"ruleId":"116","severity":1,"message":"117","line":128,"column":6,"nodeType":"118","endLine":128,"endColumn":8,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":132,"column":5,"nodeType":"118","endLine":132,"endColumn":20,"suggestions":"121"},{"ruleId":"108","severity":1,"message":"122","line":1,"column":27,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"123","line":7,"column":7,"nodeType":"110","messageId":"111","endLine":7,"endColumn":16},{"ruleId":"108","severity":1,"message":"124","line":28,"column":9,"nodeType":"110","messageId":"111","endLine":28,"endColumn":13},{"ruleId":"116","severity":1,"message":"125","line":39,"column":5,"nodeType":"118","endLine":39,"endColumn":7,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":175,"column":26,"nodeType":"129","messageId":"130","endLine":175,"endColumn":37,"fix":"131"},{"ruleId":"108","severity":1,"message":"132","line":91,"column":7,"nodeType":"110","messageId":"111","endLine":91,"endColumn":10},{"ruleId":"108","severity":1,"message":"133","line":118,"column":16,"nodeType":"110","messageId":"111","endLine":118,"endColumn":22},{"ruleId":"134","severity":1,"message":"135","line":155,"column":21,"nodeType":"136","endLine":162,"endColumn":25},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'setCityList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'coords' and 'getCityList'. Either include them or remove the dependency array. You can also do a functional update 'setCoords(c => ...)' if you only need 'coords' in the 'setCoords' call.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.",["140"],"'useEffect' is defined but never used.","'userLists' is assigned a value but never used.","'test' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'weather' and 'weathers'. Either include them or remove the dependency array.",["141"],"no-useless-rename","Destructuring assignment temp unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"142","text":"143"},"'Img' is assigned a value but never used.","'setUrl' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},[3610,3621],"temp","Update the dependencies array to be: [coords, getCityList]",{"range":"150","text":"151"},"Update the dependencies array to be: [COORDS, coords, getWeather]",{"range":"152","text":"153"},"Update the dependencies array to be: [weather, weathers]",{"range":"154","text":"155"},[3218,3220],"[coords, getCityList]",[3272,3287],"[COORDS, coords, getWeather]",[1255,1257],"[weather, weathers]"]